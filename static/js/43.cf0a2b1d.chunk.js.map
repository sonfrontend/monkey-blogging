{"version":3,"file":"static/js/43.cf0a2b1d.chunk.js","mappings":"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","sources":["components/loading/LoadingSpinner.js","components/button/Button.js","components/field/Field.js","components/field/FieldCheckboxes.js","components/image/ImageUpload.js","components/input/Input.js","components/label/Label.js","components/label/LabelStatus.js","module/dashbroad/DashboardHeading.js","module/user/UserProfile.js"],"sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst SpinnerStyles = styled.div`\r\n  width: ${(props) => props.size};\r\n  height: ${(props) => props.size};\r\n  border: ${(props) => props.borderSize} solid white;\r\n  border-top: ${(props) => props.borderSize} solid transparent;\r\n  border-bottom: ${(props) => props.borderSize} solid transparent;\r\n  border-radius: 100rem;\r\n  display: inline-block;\r\n  animation: spinner 1s infinite linear;\r\n\r\n  @keyframes spinner {\r\n    100% {\r\n      transform: rotate(360deg);\r\n    }\r\n  }\r\n`;\r\n\r\nconst LoadingSpinner = ({ size = \"40px\", borderSize = \"5px\" }) => {\r\n  return <SpinnerStyles size={size} borderSize={borderSize}></SpinnerStyles>;\r\n};\r\n\r\nexport default LoadingSpinner;\r\n","import React from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { LoadingSpinner } from \"../loading\";\r\nimport PropTypes from \"prop-types\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst ButtonStyles = styled.button`\r\n  cursor: pointer;\r\n  padding: 0 25px;\r\n  line-height: 1;\r\n  color: white;\r\n  border-radius: 8px;\r\n  font-weight: 600;\r\n  font-size: 16px;\r\n  height: ${(props) => props.height || \"66px\"};\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  ${(props) =>\r\n    props.kind === \"secondary\" &&\r\n    css`\r\n      color: ${(props) => props.theme.primary};\r\n      background-color: white;\r\n    `};\r\n  ${(props) =>\r\n    props.kind === \"primary\" &&\r\n    css`\r\n      color: white;\r\n      background-image: linear-gradient(\r\n        to right bottom,\r\n        ${(props) => props.theme.primary},\r\n        ${(props) => props.theme.secondary}\r\n      );\r\n    `};\r\n\r\n  ${(props) =>\r\n    props.kind === \"ghost\" &&\r\n    css`\r\n      color: ${(props) => props.theme.primary};\r\n      background-color: rgba(29, 192, 113, 0.1);\r\n    `};\r\n\r\n  &:disabled {\r\n    opacity: 0.5;\r\n    pointer-events: none;\r\n  }\r\n`;\r\n\r\n/**\r\n * @param {*} onClick Handle click\r\n * @requires\r\n * @param {string} type  Type of button 'button' | 'submit'\r\n * @returns\r\n */\r\n\r\nconst Button = ({\r\n  type = \"button\",\r\n  onClick = () => {},\r\n  kind = \"secondary\",\r\n\r\n  children,\r\n  ...props\r\n}) => {\r\n  const { isLoading, to } = props;\r\n  const child = !!isLoading ? <LoadingSpinner></LoadingSpinner> : children;\r\n  if (to !== \"\" && typeof to === \"string\") {\r\n    return (\r\n      <NavLink\r\n        to={to}\r\n        style={{\r\n          display: \"inline-block\",\r\n        }}\r\n      >\r\n        <ButtonStyles type={type} kind={kind} {...props}>\r\n          {child}\r\n        </ButtonStyles>\r\n      </NavLink>\r\n    );\r\n  }\r\n  return (\r\n    <ButtonStyles type={type} kind={kind} onClick={onClick} {...props}>\r\n      {child}\r\n    </ButtonStyles>\r\n  );\r\n};\r\n\r\nButton.prototype = {\r\n  type: PropTypes.oneOf([\"button\", \"submit\"]).isRequired,\r\n  isLoading: PropTypes.bool,\r\n  onClick: PropTypes.func,\r\n  children: PropTypes.node,\r\n  kind: PropTypes.oneOf([\"primary\", \"secondary\"]),\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport { Children } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst FieldStyles = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  row-gap: 20px;\r\n  align-items: flex-start;\r\n  margin-bottom: 40px;\r\n  &:last-child {\r\n    margin-bottom: 0;\r\n  }\r\n`;\r\n\r\nconst Field = ({ children }) => {\r\n  return <FieldStyles>{children}</FieldStyles>;\r\n};\r\n\r\nexport default Field;\r\n","import React from \"react\";\r\n\r\nconst FieldCheckboxes = ({ children }) => {\r\n  return <div className=\"flex flex-wrap gap-5\">{children}</div>;\r\n};\r\n\r\nexport default FieldCheckboxes;\r\n","import React, { Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ImageUpload = (props) => {\r\n  const {\r\n    name,\r\n    className = \"\",\r\n    progress = 0,\r\n    image = \"\",\r\n    handleDeleteImage = () => {},\r\n    ...rest\r\n  } = props;\r\n\r\n  return (\r\n    <label\r\n      className={`cursor-pointer flex items-center justify-center bg-gray-100 border border-dashed w-full min-h-[200px] rounded-lg ${className} relative overflow-hidden group`}\r\n    >\r\n      <input\r\n        type=\"file\"\r\n        name={name}\r\n        className=\"hidden-input\"\r\n        onChange={() => {}}\r\n        {...rest}\r\n      />\r\n      {progress !== 0 && !image && (\r\n        <div className=\"loading w-16 h-16 border-8 border-green-500 border-t-transparent animate-spin absolute z-10 rounded-full\"></div>\r\n      )}\r\n      {!image && progress === 0 && (\r\n        <div className=\"flex flex-col items-center text-center pointer-events-none\">\r\n          <img\r\n            src=\"/img-upload.png\"\r\n            alt=\"upload-img\"\r\n            className=\"max-w-[80px] mb-5\"\r\n          />\r\n          <p className=\"font-semibold\">Choose photo</p>\r\n        </div>\r\n      )}\r\n      {image && (\r\n        <Fragment>\r\n          <img src={image} alt=\"\" className=\"w-full h-full object-cover\" />\r\n          <button\r\n            type=\"button\"\r\n            className=\"w-16 h-16 bg-white rounded-full flex items-center justify-center absolute text-red-500 z-10 opacity-0 invisible transition-all group-hover:opacity-100 group-hover:visible\"\r\n            onClick={handleDeleteImage}\r\n          >\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              fill=\"none\"\r\n              viewBox=\"0 0 24 24\"\r\n              strokeWidth=\"1.5\"\r\n              stroke=\"currentColor\"\r\n              className=\"w-6 h-6\"\r\n            >\r\n              <path\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n                d=\"M14.74 9l-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 01-2.244 2.077H8.084a2.25 2.25 0 01-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 00-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 013.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 00-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 00-7.5 0\"\r\n              />\r\n            </svg>\r\n          </button>\r\n        </Fragment>\r\n      )}\r\n      {!image && (\r\n        <div\r\n          className=\"absolute w-0 h-1 bg-green-400 bottom-0 left-0 transition-all image-upload-progress\"\r\n          style={{\r\n            width: `${Math.ceil(progress)}%`,\r\n          }}\r\n        ></div>\r\n      )}\r\n    </label>\r\n  );\r\n};\r\n\r\nImageUpload.propTypes = {\r\n  // value: PropTypes.string\r\n  name: PropTypes.string,\r\n  className: PropTypes.string,\r\n  process: PropTypes.number,\r\n  image: PropTypes.string,\r\n};\r\n\r\nexport default ImageUpload;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useController } from \"react-hook-form\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst InputStyles = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  input {\r\n    width: 100%;\r\n    padding: ${(props) => (props.hasIcon ? \"20px 60px 20px 20px\" : \"20px\")};\r\n    background-color: ${(props) => props.theme.grayLight};\r\n    border-radius: 8px;\r\n    ::placeholder {\r\n      color: #84878b;\r\n    }\r\n    font-weight: 500;\r\n    transition: all 0.2s linear;\r\n    border: 1px solid transparent;\r\n  }\r\n  input:focus {\r\n    background-color: white;\r\n    border-color: ${(props) => props.theme.primary};\r\n  }\r\n  .icon-eye {\r\n    position: absolute;\r\n    right: 20px;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst Input = ({\r\n  name = \"\",\r\n  type = \"text\",\r\n  children,\r\n  hasIcon = false,\r\n  control,\r\n  ...props\r\n}) => {\r\n  const { field } = useController({\r\n    control,\r\n    name,\r\n    defaultValue: \"\",\r\n  });\r\n  return (\r\n    <InputStyles hasIcon={children ? true : false}>\r\n      <input id={name} type={type} {...field} {...props} />\r\n      {children ? <span className=\"icon-eye\">{children}</span> : null}\r\n    </InputStyles>\r\n  );\r\n};\r\n\r\nInput.propTypes = {\r\n  // value: PropTypes.string\r\n  name: PropTypes.string.isRequired,\r\n  type: PropTypes.string,\r\n  children: PropTypes.any,\r\n  control: PropTypes.any.isRequired,\r\n};\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst LabelStyles = styled.label`\r\n  color: ${(props) => props.theme.grayDark};\r\n  font-weight: 600;\r\n  cursor: pointer;\r\n`;\r\nconst Label = ({ htmlFor = \"\", children, ...props }) => {\r\n  return (\r\n    <LabelStyles htmlFor={htmlFor} {...props}>\r\n      {children}\r\n    </LabelStyles>\r\n  );\r\n};\r\n\r\nexport default Label;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst LabelStatusStyles = styled.span`\r\n  display: inline-block;\r\n  padding: 10px 15px;\r\n  border-radius: 8px;\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n`;\r\n/**\r\n *\r\n * @param type - \"default\" \"success\" \"warning\" \"danger\"\r\n * @returns\r\n */\r\nconst LabelStatus = ({ children, type = \"default\" }) => {\r\n  let styleClassName = \"text-gray-500 bg-gray-100\";\r\n  switch (type) {\r\n    case \"success\":\r\n      styleClassName = \"text-green-500 bg-green-100\";\r\n      break;\r\n    case \"warning\":\r\n      styleClassName = \"text-orange-500 bg-orange-100\";\r\n      break;\r\n    case \"danger\":\r\n      styleClassName = \"text-red-500 bg-red-100\";\r\n      break;\r\n\r\n    default:\r\n      break;\r\n  }\r\n  return (\r\n    <LabelStatusStyles className={styleClassName}>{children}</LabelStatusStyles>\r\n  );\r\n};\r\nLabelStatus.propTypes = {\r\n  children: PropTypes.node,\r\n  type: PropTypes.oneOf([\"default\", \"success\", \"warning\", \"danger\"]).isRequired,\r\n};\r\nexport default LabelStatus;\r\n","import React from \"react\";\r\n\r\nconst DashboardHeading = ({ title = \"\", desc = \"\", children }) => {\r\n  return (\r\n    <div className=\"mb-10 flex items-start justify-between\">\r\n      <div>\r\n        <h1 className=\"dashboard-heading\">{title}</h1>\r\n        <p className=\"dashboard-short-desc\">{desc}</p>\r\n      </div>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardHeading;\r\n","import React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Button } from \"../../components/button\";\r\nimport { Field } from \"../../components/field\";\r\nimport ImageUpload from \"../../components/image/ImageUpload\";\r\nimport { Input } from \"../../components/input\";\r\nimport { Label } from \"../../components/label\";\r\nimport DashboardHeading from \"../dashbroad/DashboardHeading\";\r\n\r\nconst UserProfile = () => {\r\n  const { control } = useForm({\r\n    mode: \"onChange\",\r\n  });\r\n  return (\r\n    <div>\r\n      <DashboardHeading\r\n        title=\"Account information\"\r\n        desc=\"Update your account information\"\r\n      ></DashboardHeading>\r\n      <form>\r\n        <div className=\"text-center mb-10\">\r\n          <ImageUpload className=\"w-[200px] h-[200px] !rounded-full min-h-0 mx-auto\"></ImageUpload>\r\n        </div>\r\n        <div className=\"form-layout\">\r\n          <Field>\r\n            <Label>Fullname</Label>\r\n            <Input\r\n              control={control}\r\n              name=\"fullname\"\r\n              placeholder=\"Enter your fullname\"\r\n            ></Input>\r\n          </Field>\r\n          <Field>\r\n            <Label>Username</Label>\r\n            <Input\r\n              control={control}\r\n              name=\"username\"\r\n              placeholder=\"Enter your username\"\r\n            ></Input>\r\n          </Field>\r\n        </div>\r\n        <div className=\"form-layout\">\r\n          <Field>\r\n            <Label>Date of Birth</Label>\r\n            <Input\r\n              control={control}\r\n              name=\"birthday\"\r\n              placeholder=\"dd/mm/yyyy\"\r\n            ></Input>\r\n          </Field>\r\n          <Field>\r\n            <Label>Mobile Number</Label>\r\n            <Input\r\n              control={control}\r\n              name=\"phone\"\r\n              placeholder=\"Enter your phone number\"\r\n            ></Input>\r\n          </Field>\r\n        </div>\r\n        <div className=\"form-layout\">\r\n          <Field>\r\n            <Label>Email</Label>\r\n            <Input\r\n              control={control}\r\n              name=\"email\"\r\n              type=\"email\"\r\n              placeholder=\"Enter your email address\"\r\n            ></Input>\r\n          </Field>\r\n          <Field></Field>\r\n        </div>\r\n        <div className=\"form-layout\">\r\n          <Field>\r\n            <Label>New Password</Label>\r\n            <Input\r\n              control={control}\r\n              name=\"password\"\r\n              type=\"password\"\r\n              placeholder=\"Enter your password\"\r\n            ></Input>\r\n          </Field>\r\n          <Field>\r\n            <Label>Confirm Password</Label>\r\n            <Input\r\n              control={control}\r\n              name=\"confirmPassword\"\r\n              type=\"password\"\r\n              placeholder=\"Enter your confirm password\"\r\n            ></Input>\r\n          </Field>\r\n        </div>\r\n        <Button kind=\"primary\" className=\"mx-auto w-[200px]\">\r\n          Update\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserProfile;\r\n"],"names":["SpinnerStyles","styled","props","size","borderSize","ButtonStyles","height","kind","css","theme","primary","secondary","Button","type","onClick","children","isLoading","to","child","style","display","prototype","PropTypes","isRequired","FieldStyles","className","name","progress","image","handleDeleteImage","rest","onChange","src","alt","Fragment","xmlns","fill","viewBox","strokeWidth","stroke","strokeLinecap","strokeLinejoin","d","width","Math","ceil","InputStyles","hasIcon","grayLight","control","field","useController","defaultValue","id","LabelStyles","grayDark","htmlFor","LabelStatusStyles","styleClassName","title","desc","useForm","mode","I","placeholder"],"sourceRoot":""}