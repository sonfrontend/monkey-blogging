{"version":3,"file":"static/js/297.9b624cad.chunk.js","mappings":"uaA+BAA,EAAAA,MAAAA,SAAe,wBAAyBC,EAAAA,GAuQxC,UArQmB,WACjB,OAAiBC,EAAAA,EAAAA,MACXC,GADN,eACsBC,IAAI,MAC1B,GAAoCC,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAA4CF,EAAAA,EAAAA,UAAS,IAArD,eAAOG,EAAP,KAAuBC,EAAvB,KACA,GAA8BJ,EAAAA,EAAAA,UAAS,IAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KACA,GAQIC,EAAAA,EAAAA,IAAQ,CACVC,KAAM,WACNC,cAAe,CACbC,MAAO,GACPC,KAAM,GACNN,QAAS,GACTO,OAAQ,EACRC,KAAK,EACLC,MAAO,GACPC,SAAU,CAAC,EACXC,KAAM,CAAC,KAjBTC,EADF,EACEA,aACAC,EAFF,EAEEA,QACAC,EAHF,EAGEA,MACAC,EAJF,EAIEA,SACAC,EALF,EAKEA,MACAC,EANF,EAMEA,UANF,IAOEC,UAAaC,EAPf,EAOeA,QAASC,EAPxB,EAOwBA,aAelBC,EAAWJ,EAAU,SACrBK,EAAYL,EAAU,cAC5B,GAOIM,EAAAA,EAAAA,GAAiBR,EAAUE,EAAWK,GArCnB,8CA+BrBb,EADF,EACEA,MACAe,EAFF,EAEEA,SAEAC,IAJF,EAGEC,iBAHF,EAIED,UACAE,GALF,EAKEA,kBACAC,GANF,EAMEA,kBApCqB,gDAuCvB,gGACQC,GAASC,EAAAA,EAAAA,IAAIC,EAAAA,GAAI,SAAUtC,GADnC,UAEQuC,EAAAA,EAAAA,IAAUH,EAAQ,CACtBpB,MAAO,KAHX,4CAvCuB,uBA8CvBwB,EAAAA,EAAAA,YAAU,WACRT,EAASH,EACV,GAAE,CAACG,EAAUH,KAEdY,EAAAA,EAAAA,YAAU,WAAM,8CACd,sGACQC,GAASC,EAAAA,EAAAA,IAAWJ,EAAAA,GAAI,cACxBK,GAAIC,EAAAA,EAAAA,IAAMH,GAAQI,EAAAA,EAAAA,IAAM,SAAU,KAAM,IAFhD,UAG8BC,EAAAA,EAAAA,IAAQH,GAHtC,OAGQI,EAHR,OAIMC,EAAS,GACbD,EAAcE,SAAQ,SAACZ,GAErBW,EAAOE,MAAP,QACEC,GAAId,EAAIc,IACLd,EAAIe,QAEV,IACDhD,EAAc4C,GAZhB,4CADc,uBAAC,WAAD,wBAedK,EACD,GAAE,IAEH,IAAMC,GAAWjC,EAAM,OACjBkC,GAAclC,EAAM,WAC1BmB,EAAAA,EAAAA,YAAU,WAAM,8CAEd,kGACOxC,EADP,wDAEQoC,GAASC,EAAAA,EAAAA,IAAIC,EAAAA,GAAI,QAAStC,GAFlC,UAG4BwD,EAAAA,EAAAA,IAAOpB,GAHnC,QAGQqB,EAHR,QAIkBL,SACd7B,GAAM,QAAE4B,GAAIM,EAAYN,IAAOM,EAAYL,SAC3C9C,GAAkB,UAAAmD,EAAYL,cAAZ,eAAoBnC,WAAY,IAClDT,GAAW,UAAAiD,EAAYL,cAAZ,eAAoB7C,UAAW,KAP9C,4CAFc,sBACTmB,GADS,mCAYdgC,EACD,GAAE,CAAC1D,EAAQ0B,EAASH,IAErB,IAAMoC,GAAiB,yCAAG,WAAOC,GAAP,qFAClBxB,GAASC,EAAAA,EAAAA,IAAIC,EAAAA,GAAI,aAAcsB,EAAKT,IADlB,UAEFK,EAAAA,EAAAA,IAAOpB,GAFL,OAElByB,EAFkB,OAGxBvC,EAAS,YAAD,QACN6B,GAAIU,EAAQV,IACTU,EAAQT,SAEb9C,EAAkBsD,GAPM,2CAAH,sDAUjBE,GAAgB,yCAAG,WAAOC,GAAP,mFACjBC,GAAS3B,EAAAA,EAAAA,IAAIC,EAAAA,GAAI,QAAStC,GAChC+D,EAAOjD,OAASmD,OAAOF,EAAOjD,QAC9BiD,EAAOlD,KAAOqD,IAAQH,EAAOlD,MAAQkD,EAAOnD,MAAO,CAAEuD,OAAO,IAHrC,UAIjB5B,EAAAA,EAAAA,IAAUyB,GAAD,QAAC,UACXD,GADU,IAEb/C,MAAAA,EACAT,QAAAA,KAPqB,OASvB6D,EAAAA,GAAAA,QAAc,6BATS,2CAAH,sDAWhBC,IAAUC,EAAAA,EAAAA,UACd,iBAAO,CACLC,QAAS,CACP,CAAC,OAAQ,SAAU,YAAa,UAChC,CAAC,cACD,CAAC,CAAEC,OAAQ,GAAK,CAAEA,OAAQ,IAC1B,CAAC,CAAEC,KAAM,WAAa,CAAEA,KAAM,WAC9B,CAAC,CAAED,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAG,KAC9B,CAAC,OAAQ,UAEXE,cAAe,CACbC,OAAO,WAAD,8BAAE,WAAOC,GAAP,qFACAC,EAAe,IAAIC,UACZC,OAAO,QAASH,GAFvB,SAGiBI,IAAM,CAC3BC,OAAQ,OACRC,IAAK,sEACL9B,KAAMyB,EACNL,OAAQ,CACN,eAAgB,yBARd,cAGAW,EAHA,yBAWCA,EAAS/B,KAAKA,KAAK8B,KAXpB,2CAAF,mDAAC,IAVX,GAyBA,IAEF,OAAKlF,GAEH,iCACE,SAAC,IAAD,CACEY,MAAM,cACNwE,KAAK,yBAEP,kBAAMC,SAAUlE,EAAa2C,IAA7B,WACE,iBAAKwB,UAAU,cAAf,WACE,UAAC,IAAD,YACE,SAAC,IAAD,qBACA,SAAC,EAAAC,EAAD,CACEnE,QAASA,EACToE,YAAY,mBACZC,KAAK,QACLC,UAAQ,QAGZ,UAAC,IAAD,YACE,SAAC,IAAD,oBACA,SAAC,EAAAH,EAAD,CACEnE,QAASA,EACToE,YAAY,kBACZC,KAAK,gBAIX,iBAAKH,UAAU,cAAf,WACE,UAAC,IAAD,YACE,SAAC,IAAD,qBACA,SAAC,IAAD,CACEK,SAAUzD,GACVC,kBAAmBA,GACnBmD,UAAU,YACVtD,SAAUA,GACVhB,MAAOA,QAGX,UAAC,IAAD,YACE,SAAC,IAAD,wBACA,UAAC,IAAD,YACE,SAAC,WAAD,CAAiBwE,YAAY,yBAC7B,SAAC,SAAD,UACGrF,EAAWyF,OAAS,GACnBzF,EAAW0F,KAAI,SAACjC,GAAD,OACb,SAAC,WAAD,CAEEkC,QAAS,kBAAMnC,GAAkBC,EAAxB,EAFX,SAIGA,EAAK6B,MAHD7B,EAAKT,GAFC,UAUN,OAAd9C,QAAc,IAAdA,OAAA,EAAAA,EAAgBoF,QACf,iBAAMH,UAAU,6EAAhB,gBACGjF,QADH,IACGA,OADH,EACGA,EAAgBoF,cAKzB,gBAAKH,UAAU,QAAf,UACE,UAAC,IAAD,YACE,SAAC,IAAD,uBACA,gBAAKA,UAAU,uBAAf,UACE,SAAC,IAAD,CAEEjB,QAASA,GACT0B,MAAM,OACNC,MAAOzF,EACPoF,SAAUnF,YAKlB,iBAAK8E,UAAU,cAAf,WACE,UAAC,IAAD,YACE,SAAC,IAAD,4BACA,SAAC,IAAD,CACEW,IAAiB,IAAb3C,GACJwC,QAAS,kBAAMxE,EAAS,OAAQgC,GAAvB,QAGb,UAAC,IAAD,YACE,SAAC,IAAD,sBACA,UAAC,IAAD,YACE,SAAC,IAAD,CACEmC,KAAK,SACLrE,QAASA,EACT8E,QAASjC,OAAOV,MAAiB4C,EAAAA,GAAAA,SACjCH,MAAOG,EAAAA,GAAAA,SAJT,uBAQA,SAAC,IAAD,CACEV,KAAK,SACLrE,QAASA,EACT8E,QAASjC,OAAOV,MAAiB4C,EAAAA,GAAAA,QACjCH,MAAOG,EAAAA,GAAAA,QAJT,sBAQA,SAAC,IAAD,CACEV,KAAK,SACLrE,QAASA,EACT8E,QAASjC,OAAOV,MAAiB4C,EAAAA,GAAAA,SACjCH,MAAOG,EAAAA,GAAAA,SAJT,8BAWN,SAAC,IAAD,CACEC,KAAK,SACLd,UAAU,oBACVe,KAAK,UACLC,UAAW3E,EACX4E,SAAU5E,EALZ,+BAjHc,IA6HrB,C","sources":["module/post/PostUpdate.js"],"sourcesContent":["import {\r\n  collection,\r\n  doc,\r\n  getDoc,\r\n  getDocs,\r\n  query,\r\n  updateDoc,\r\n  where,\r\n} from \"firebase/firestore\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport { Button } from \"../../components/button\";\r\nimport { Radio } from \"../../components/checkbox\";\r\nimport { Dropdown } from \"../../components/dropdown\";\r\nimport { Field, FieldCheckboxes } from \"../../components/field\";\r\nimport ImageUpload from \"../../components/image/ImageUpload\";\r\nimport { Input } from \"../../components/input\";\r\nimport { Label } from \"../../components/label\";\r\nimport { Toggle } from \"../../components/toggle\";\r\nimport { db } from \"../../firebase-app/firebase-config\";\r\nimport useFirebaseImage from \"../../hook/useFirebaseImage\";\r\nimport { postStatus } from \"../../utils/constants\";\r\nimport DashboardHeading from \"../dashbroad/DashboardHeading\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-quill/dist/quill.snow.css\";\r\nimport ReactQuill, { Quill } from \"react-quill\";\r\nimport ImageUploader from \"quill-image-uploader\";\r\nimport { useMemo } from \"react\";\r\nimport axios from \"axios\";\r\nimport slugify from \"slugify\";\r\nQuill.register(\"modules/imageUploader\", ImageUploader);\r\n\r\nconst PostUpdate = () => {\r\n  const [params] = useSearchParams();\r\n  const postId = params.get(\"id\");\r\n  const [categories, setCategories] = useState([]);\r\n  const [selectCategory, setSelectCategory] = useState(\"\");\r\n  const [content, setContent] = useState(\"\");\r\n  const {\r\n    handleSubmit,\r\n    control,\r\n    watch,\r\n    setValue,\r\n    reset,\r\n    getValues,\r\n    formState: { isValid, isSubmitting },\r\n  } = useForm({\r\n    mode: \"onChange\",\r\n    defaultValues: {\r\n      title: \"\",\r\n      slug: \"\",\r\n      content: \"\",\r\n      status: 1,\r\n      hot: false,\r\n      image: \"\",\r\n      category: {},\r\n      user: {},\r\n    },\r\n  });\r\n\r\n  const imageUrl = getValues(\"image\");\r\n  const imageName = getValues(\"image_name\");\r\n  const {\r\n    image,\r\n    setImage,\r\n    handleResetImage,\r\n    progress,\r\n    handleSelectImage,\r\n    handleDeleteImage,\r\n  } = useFirebaseImage(setValue, getValues, imageName, deletePostImage);\r\n\r\n  async function deletePostImage() {\r\n    const colRef = doc(db, \"postId\", postId);\r\n    await updateDoc(colRef, {\r\n      image: \"\",\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    setImage(imageUrl);\r\n  }, [setImage, imageUrl]);\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      const conRef = collection(db, \"categories\");\r\n      const p = query(conRef, where(\"status\", \">=\", 1));\r\n      const querySnapshot = await getDocs(p);\r\n      let result = [];\r\n      querySnapshot.forEach((doc) => {\r\n        // doc.data() is never undefined for query doc snapshots\r\n        result.push({\r\n          id: doc.id,\r\n          ...doc.data(),\r\n        });\r\n      });\r\n      setCategories(result);\r\n    }\r\n    getData();\r\n  }, []);\r\n\r\n  const watchHot = watch(\"hot\");\r\n  const watchStatus = watch(\"status\");\r\n  useEffect(() => {\r\n    if (!isValid) return;\r\n    async function fecthData() {\r\n      if (!postId) return;\r\n      const colRef = doc(db, \"posts\", postId);\r\n      const docSnapshot = await getDoc(colRef);\r\n      if (docSnapshot.data()) {\r\n        reset({ id: docSnapshot.id, ...docSnapshot.data() });\r\n        setSelectCategory(docSnapshot.data()?.category || \"\");\r\n        setContent(docSnapshot.data()?.content || \"\");\r\n      }\r\n    }\r\n    fecthData();\r\n  }, [postId, isValid, reset]);\r\n\r\n  const handleClickOption = async (item) => {\r\n    const colRef = doc(db, \"categories\", item.id);\r\n    const docData = await getDoc(colRef);\r\n    setValue(\"category\", {\r\n      id: docData.id,\r\n      ...docData.data(),\r\n    });\r\n    setSelectCategory(item);\r\n  };\r\n\r\n  const handleUpdatePost = async (values) => {\r\n    const docRef = doc(db, \"posts\", postId);\r\n    values.status = Number(values.status);\r\n    values.slug = slugify(values.slug || values.title, { lower: true });\r\n    await updateDoc(docRef, {\r\n      ...values,\r\n      image,\r\n      content,\r\n    });\r\n    toast.success(\"Update post successfully!\");\r\n  };\r\n  const modules = useMemo(\r\n    () => ({\r\n      toolbar: [\r\n        [\"bold\", \"italic\", \"underline\", \"strike\"],\r\n        [\"blockquote\"],\r\n        [{ header: 1 }, { header: 2 }], // custom button values\r\n        [{ list: \"ordered\" }, { list: \"bullet\" }],\r\n        [{ header: [1, 2, 3, 4, 5, 6, false] }],\r\n        [\"link\", \"image\"],\r\n      ],\r\n      imageUploader: {\r\n        upload: async (file) => {\r\n          const bodyFormData = new FormData();\r\n          bodyFormData.append(\"image\", file);\r\n          const response = await axios({\r\n            method: \"POST\",\r\n            url: \"https://api.imgbb.com/1/upload?key=00a22eac82c2669afff11586e7dc8125\",\r\n            data: bodyFormData,\r\n            header: {\r\n              \"Content-Type\": \"multipart/form-data\",\r\n            },\r\n          });\r\n          return response.data.data.url;\r\n        },\r\n      },\r\n    }),\r\n    []\r\n  );\r\n  if (!postId) return null;\r\n  return (\r\n    <>\r\n      <DashboardHeading\r\n        title=\"Update post\"\r\n        desc=\"Update post content\"\r\n      ></DashboardHeading>\r\n      <form onSubmit={handleSubmit(handleUpdatePost)}>\r\n        <div className=\"form-layout\">\r\n          <Field>\r\n            <Label>Title</Label>\r\n            <Input\r\n              control={control}\r\n              placeholder=\"Enter your title\"\r\n              name=\"title\"\r\n              required\r\n            ></Input>\r\n          </Field>\r\n          <Field>\r\n            <Label>Slug</Label>\r\n            <Input\r\n              control={control}\r\n              placeholder=\"Enter your slug\"\r\n              name=\"slug\"\r\n            ></Input>\r\n          </Field>\r\n        </div>\r\n        <div className=\"form-layout\">\r\n          <Field>\r\n            <Label>Image</Label>\r\n            <ImageUpload\r\n              onChange={handleSelectImage}\r\n              handleDeleteImage={handleDeleteImage}\r\n              className=\"h-[250px]\"\r\n              progress={progress}\r\n              image={image}\r\n            ></ImageUpload>\r\n          </Field>\r\n          <Field>\r\n            <Label>Category</Label>\r\n            <Dropdown>\r\n              <Dropdown.Select placeholder=\"Select the category\"></Dropdown.Select>\r\n              <Dropdown.List>\r\n                {categories.length > 0 &&\r\n                  categories.map((item) => (\r\n                    <Dropdown.Option\r\n                      key={item.id}\r\n                      onClick={() => handleClickOption(item)}\r\n                    >\r\n                      {item.name}\r\n                    </Dropdown.Option>\r\n                  ))}\r\n              </Dropdown.List>\r\n            </Dropdown>\r\n            {selectCategory?.name && (\r\n              <span className=\"inline-block p-3 text-sm font-medium text-green-600 rounded-lg bg-green-50\">\r\n                {selectCategory?.name}\r\n              </span>\r\n            )}\r\n          </Field>\r\n        </div>\r\n        <div className=\"mb-10\">\r\n          <Field>\r\n            <Label>Content</Label>\r\n            <div className=\"w-full entry-content\">\r\n              <ReactQuill\r\n                // modules={modules}\r\n                modules={modules}\r\n                theme=\"snow\"\r\n                value={content}\r\n                onChange={setContent}\r\n              />\r\n            </div>\r\n          </Field>\r\n        </div>\r\n        <div className=\"form-layout\">\r\n          <Field>\r\n            <Label>Feature post</Label>\r\n            <Toggle\r\n              on={watchHot === true}\r\n              onClick={() => setValue(\"hot\", !watchHot)}\r\n            ></Toggle>\r\n          </Field>\r\n          <Field>\r\n            <Label>Status</Label>\r\n            <FieldCheckboxes>\r\n              <Radio\r\n                name=\"status\"\r\n                control={control}\r\n                checked={Number(watchStatus) === postStatus.APPROVED}\r\n                value={postStatus.APPROVED}\r\n              >\r\n                Approved\r\n              </Radio>\r\n              <Radio\r\n                name=\"status\"\r\n                control={control}\r\n                checked={Number(watchStatus) === postStatus.PENDING}\r\n                value={postStatus.PENDING}\r\n              >\r\n                Pending\r\n              </Radio>\r\n              <Radio\r\n                name=\"status\"\r\n                control={control}\r\n                checked={Number(watchStatus) === postStatus.REJECTED}\r\n                value={postStatus.REJECTED}\r\n              >\r\n                Reject\r\n              </Radio>\r\n            </FieldCheckboxes>\r\n          </Field>\r\n        </div>\r\n        <Button\r\n          type=\"submit\"\r\n          className=\"mx-auto w-[250px]\"\r\n          kind=\"primary\"\r\n          isLoading={isSubmitting}\r\n          disabled={isSubmitting}\r\n        >\r\n          Update post\r\n        </Button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PostUpdate;\r\n"],"names":["Quill","ImageUploader","useSearchParams","postId","get","useState","categories","setCategories","selectCategory","setSelectCategory","content","setContent","useForm","mode","defaultValues","title","slug","status","hot","image","category","user","handleSubmit","control","watch","setValue","reset","getValues","formState","isValid","isSubmitting","imageUrl","imageName","useFirebaseImage","setImage","progress","handleResetImage","handleSelectImage","handleDeleteImage","colRef","doc","db","updateDoc","useEffect","conRef","collection","p","query","where","getDocs","querySnapshot","result","forEach","push","id","data","getData","watchHot","watchStatus","getDoc","docSnapshot","fecthData","handleClickOption","item","docData","handleUpdatePost","values","docRef","Number","slugify","lower","toast","modules","useMemo","toolbar","header","list","imageUploader","upload","file","bodyFormData","FormData","append","axios","method","url","response","desc","onSubmit","className","I","placeholder","name","required","onChange","length","map","onClick","theme","value","on","checked","postStatus","type","kind","isLoading","disabled"],"sourceRoot":""}